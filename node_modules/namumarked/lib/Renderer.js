/**
 * NamuMarked Default Renderer
 * Copyright RedPumpkin.
 * 
 * MIT Licensed.
 */
'use strict';

class Renderer {
	////////////
	// Blocks //
	////////////

	/**
	 * 다른 페이지로 리다이렉트 합니다.
	 */
	redirect(goto) {
		return `<script>location.href='/w/${encodeURI(goto)}';</script>`;
	}

	/**
	 * Latex math
	 */
	math(content) {
		return `<img src="https://latex.codecogs.com/gif.latex?${content}" /><br />`;
	}

	/**
	 * 외부 이미지
	 */
	extimg(src, options) {
		let attrs = '';
		let key;
		let value;
		for (key in options) {
			attrs += ` ${key}="${options[key]}"`;
		}
		return `<img src="${src}"${attrs}"><br />`;
	}

	/**
	 * 헤딩
	 */
	heading(depth, text) {
		return `<h${depth}>${text}</h${depth}>`;
	}

	/**
	 * 수평줄
	 */
	hr() {
		return '<hr>';
	}

	/**
	 * 인용문
	 */
	blockquote(content) {
		return `<blockquote class="wiki-quote">${content}</blockquote>`;
	}

	/**
	 * 리스트
	 */
	list(content, ordered) {
		let type = ordered ? 'ol' : 'ul';
		return `<${type}>${content}</${type}>`;
	}

	/**
	 * 리스트 아이템
	 */
	list_item(content) {
		return `<li>${content}</li>`;
	}

	/**
	 * 테이블
	 */
	table(content, opt) {
		let style = [];
		let i;
		for (i in opt) {
			if (opt[i] === null) {
				continue;
			}

			switch(i) {
				case 'align':
					style.push(`float:${opt['align']}`);
					break;
				case 'bgcolor':
					style.push(`background-color:${opt['bgcolor']}`);
					break;
				case 'bordercolor':
					style.push(`border:1px solid ${opt['bordercolor']}`);
					break;
				case 'width':
					style.push(`width:${opt['width']}`);
					break;
			}
		}

		return `<table style="${style.join(';')}">${content}</table>`;
	}

	/**
	 * 테이블 캡션
	 */
	table_caption(content) {
		return `<caption>${content}</caption>`
	}

	/**
	 * 테이블의 한 줄
	 */
	table_row(content, opt) {
		let style = '';
		if (opt['bgcolor'] !== null) {
			style = `background-color:${opt['bgcolor']}`;
		}

		return `<tr style="${style}">${content}</tr>`;
	}

	/**
	 * 테이블의 한 칸
	 */
	table_cell(content, opt) {
		let style = [];
		let i;
		for (i in opt) {
			if (opt[i] === null) {
				continue;
			}

			switch(i) {
				case 'bgcolor':
					style.push(`background-color:${opt['bgcolor']}`);
					break;
				case 'width':
					style.push(`width:${opt['width']}`);
					break;
				case 'height':
					style.push(`height:${opt['height']}`);
					break;
				case 'align':
					style.push(`text-align:${opt['align']}`);
					break;
				case 'valign':
					style.push(`vertical-align:${opt['align']}`);
					break;
			}
		}

		let attr = '';
		if (style.length > 0) {
			attr = ` style="${style.join('')}"`;
		}
		if (opt.colspan > 1) {
			attr += ` colspan="${opt.colspan}"`;
		}
		if (opt.rowspan > 1) {
			attr += ` rowspan="${opt.rowspan}"`;
		}

		return `<td${attr}>${content}</td>`;
	}

	/**
	 * 글상자
	 */
	textbox(content) {
		return `<table><tbody><tr><td>${content}</td></tr></tbody></table>`;
	}

	/////////////
	// Inlines //
	/////////////

	/**
	 * 굵게
	 */
	strong(content) {
		return typeof content !== 'undefined'
			? `<strong>${content}`
			: '</strong>'
			;
	}

	/**
	 * 기울이기
	 */
	italic(content) {
		return typeof content !== 'undefined'
			? `<em>${content}`
			: '</em>'
			;
	}

	/**
	 * 취소선
	 */
	delete(content) {
		return `<del>${content}</del>`;
	}

	/**
	 * 밑줄
	 */
	underline(content) {
		return `<u>${content}</u>`;
	}
	
	/**
	 * 위첨자
	 */
	superscript(content) {
		return `<sup>${content}</sup>`;
	}
	
	/**
	 * 아래첨자
	 */
	subscript(content) {
		return `<sub>${content}</sub>`;
	}

	/**
	 * 문단
	 */
	paragraph(text) {
		return `<p>${this.text(text)}</p>`;
	}
	
	newline() {
		return '<br />';
	}

	/**
	 * 텍스트
	 */
	text(text) {
		return text;
	}

	/////////////
	// Utils //
	/////////////

	/**
	 * Generate attributes
	 */
	attr(opt) {
		let i;
		let buff = [];
		for (i in opt) {
			if (typeof opt[i] === 'object') {
				opt[i] = this.attr(opt[i]);
			}
			if (typeof opt[i] !== 'string') {
				opt[i] = opt[i].toString();
			}

			buff.push(`${i}=${opt[i]}`);
		}

		return buff.join(' ');
	}
}

module.exports = Renderer;